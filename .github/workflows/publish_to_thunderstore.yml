name: Publish Modpack to Thunderstore

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect if Manual Publish
        run: |
          if [ "${{ github.actor }}" = "github-actions[bot]" ]; then
            echo "IS_MANUAL=false" >> $GITHUB_ENV
          else
            echo "IS_MANUAL=true" >> $GITHUB_ENV
          fi

      - name: Download Thunderstore CLI
        run: |
          curl -L -o tcli.tar.gz https://github.com/thunderstore-io/thunderstore-cli/releases/download/0.2.4/tcli-0.2.4-linux-x64.tar.gz
          mkdir tcli
          tar -xzf tcli.tar.gz -C tcli
          chmod +x tcli/tcli

      - name: Validate Files Before Publishing
        run: |
          echo "🔍 Validating manifest.json..."
          python -m json.tool < manifest.json > /dev/null

          echo "🔍 Validating thunderstore.toml..."
          python3 -c "import toml; toml.load(open('thunderstore.toml'))"

          echo "🔍 Checking if icon.png exists..."
          test -f icon.png

          echo "🔍 Checking if README.md exists..."
          test -f README.md

          echo "✅ Validation passed! Ready to publish."

      - name: Build Modpack
        env:
          THUNDERSTORE_TOKEN: ${{ secrets.THUNDERSTORE_TOKEN }}
          THUNDERSTORE_TEAM: ${{ vars.THUNDERSTORE_TEAM }}
        run: |
          ./tcli/tcli init --token "$THUNDERSTORE_TOKEN" --community repo --namespace "$THUNDERSTORE_TEAM"
          echo "🏗️ Building the modpack..."
          ./tcli/tcli build

      - name: Publish Modpack (only on automatic call)
        if: env.IS_MANUAL == 'false'
        env:
          THUNDERSTORE_TOKEN: ${{ secrets.THUNDERSTORE_TOKEN }}
          THUNDERSTORE_TEAM: ${{ vars.THUNDERSTORE_TEAM }}
        run: |
          echo "🚀 Publishing to Thunderstore..."
          ./tcli/tcli publish

      - name: Publish Summary
        if: env.IS_MANUAL == 'false'
        run: |
          echo "## 🚀 Published Modpack Version" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`${GITHUB_REF_NAME}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Published to:** [Thunderstore](https://thunderstore.io/c/repo/) 🌩️" >> $GITHUB_STEP_SUMMARY

      - name: Create GitHub Release
        if: env.IS_MANUAL == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🛠 Extracting latest changelog entry..."
          awk '/^## v/ && ++n > 1 { exit } { if (n==1) print }' CHANGELOG.md > release_notes.md

          echo "📦 Creating GitHub Release with built modpack attached..."
          gh release create "${GITHUB_REF_NAME}" builds/*.zip --title "${GITHUB_REF_NAME}" --notes-file release_notes.md

      - name: Notify Discord (only on successful publish)
        if: env.IS_MANUAL == 'false'
        run: |
          echo "📢 Sending Discord notification..."
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"📢 New Modpack version **${GITHUB_REF_NAME}** has been published to Thunderstore! 🚀\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
